//
// CreativeLoggingEndpoints.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class CreativeLoggingEndpoints {
    /**
     Used to send log messages to Extole

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func create(body: CreateCreativeLogRequest? = nil, completion: @escaping ((_ data: CreateCreativeLogResponse?,_ error: Error?) -> Void)) {
        createWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Used to send log messages to Extole
     - POST /v4/debug/logs
     - 

     - API Key:
       - type: apiKey access_token (QUERY)
       - name: COOKIE
     - API Key:
       - type: apiKey Authorization 
       - name: HEADER
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: QUERY
     - examples: [{contentType=application/json, example={
  "polling_id" : "polling_id"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<CreateCreativeLogResponse> 
     */
    open class func createWithRequestBuilder(body: CreateCreativeLogRequest? = nil) -> RequestBuilder<CreateCreativeLogResponse> {
        let path = "/v4/debug/logs"
        let URLString = ExtoleConsumerAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CreateCreativeLogResponse>.Type = ExtoleConsumerAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
