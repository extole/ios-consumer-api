//
// Endpoint meant to be used in email one-click unsubscribe as described in https://datatracker.ietf.org/doc/html/rfc8058Endpoints.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class Endpoint meant to be used in email one-click unsubscribe as described in https://datatracker.ietf.org/doc/html/rfc8058Endpoints {
    /**
     Unsubscribes the email address from the specified list

     - parameter listName: (query)  (optional)
     - parameter encryptedEmail: (query)  (optional)
     - parameter source: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func unsubscribe(listName: String? = nil, encryptedEmail: String? = nil, source: String? = nil, completion: @escaping ((_ data: UnsubscribeResponse?,_ error: Error?) -> Void)) {
        unsubscribeWithRequestBuilder(listName: listName, encryptedEmail: encryptedEmail, source: source).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Unsubscribes the email address from the specified list
     - POST /v4/unsubscribe

     - API Key:
       - type: apiKey access_token (QUERY)
       - name: COOKIE
     - API Key:
       - type: apiKey Authorization 
       - name: HEADER
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: QUERY
     - examples: [{contentType=application/json, example={
  "unsubscribed" : true
}}]
     - parameter listName: (query)  (optional)
     - parameter encryptedEmail: (query)  (optional)
     - parameter source: (query)  (optional)

     - returns: RequestBuilder<UnsubscribeResponse> 
     */
    open class func unsubscribeWithRequestBuilder(listName: String? = nil, encryptedEmail: String? = nil, source: String? = nil) -> RequestBuilder<UnsubscribeResponse> {
        let path = "/v4/unsubscribe"
        let URLString = ExtoleConsumerAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "list_name": listName, 
                        "encrypted_email": encryptedEmail, 
                        "source": source
        ])


        let requestBuilder: RequestBuilder<UnsubscribeResponse>.Type = ExtoleConsumerAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
