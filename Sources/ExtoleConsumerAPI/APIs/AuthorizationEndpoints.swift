//
// AuthorizationEndpoints.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AuthorizationEndpoints {
    /**
     Creates a new access token

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createToken(body: CreateTokenRequest? = nil, completion: @escaping ((_ data: TokenResponse?,_ error: Error?) -> Void)) {
        createTokenWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Creates a new access token
     - POST /v5/token

     - API Key:
       - type: apiKey access_token (QUERY)
       - name: COOKIE
     - API Key:
       - type: apiKey Authorization 
       - name: HEADER
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: QUERY
     - examples: [{contentType=application/json, example={
  "access_token" : "access_token",
  "scopes" : [ "VERIFIED_CONSUMER", "VERIFIED_CONSUMER" ],
  "expires_in" : 0
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<TokenResponse> 
     */
    open class func createTokenWithRequestBuilder(body: CreateTokenRequest? = nil) -> RequestBuilder<TokenResponse> {
        let path = "/v5/token"
        let URLString = ExtoleConsumerAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<TokenResponse>.Type = ExtoleConsumerAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**
     Deletes the unique access token identified in the request from the associate user's profile.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteToken(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteTokenWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Deletes the unique access token identified in the request from the associate user's profile.
     - DELETE /v5/token

     - API Key:
       - type: apiKey access_token (QUERY)
       - name: COOKIE
     - API Key:
       - type: apiKey Authorization 
       - name: HEADER
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: QUERY

     - returns: RequestBuilder<Void> 
     */
    open class func deleteTokenWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/v5/token"
        let URLString = ExtoleConsumerAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = ExtoleConsumerAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get access token details

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTokenDetails(completion: @escaping ((_ data: TokenResponse?,_ error: Error?) -> Void)) {
        getTokenDetailsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get access token details
     - GET /v5/token

     - API Key:
       - type: apiKey access_token (QUERY)
       - name: COOKIE
     - API Key:
       - type: apiKey Authorization 
       - name: HEADER
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: QUERY
     - examples: [{contentType=application/json, example={
  "access_token" : "access_token",
  "scopes" : [ "VERIFIED_CONSUMER", "VERIFIED_CONSUMER" ],
  "expires_in" : 0
}}]

     - returns: RequestBuilder<TokenResponse> 
     */
    open class func getTokenDetailsWithRequestBuilder() -> RequestBuilder<TokenResponse> {
        let path = "/v5/token"
        let URLString = ExtoleConsumerAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<TokenResponse>.Type = ExtoleConsumerAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
