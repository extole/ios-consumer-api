//
// PersonReward.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct PersonReward: Codable {

    public var dateEarned: String?
    public var data: [String:String]?
    public var _id: String?
    public var state: String?
    public var campaignId: String?
    public var partnerRewardId: String?
    public var faceValue: String?
    public var faceValueType: String?
    public var rewardedDate: String?
    public var sandbox: String?
    public var rewardSlots: [String]?
    public var rewardId: String?
    public var rewardSupplierId: String?
    public var personRole: String?
    public var programLabel: String?

    public init(dateEarned: String? = nil, data: [String:String]? = nil, _id: String? = nil, state: String? = nil, campaignId: String? = nil, partnerRewardId: String? = nil, faceValue: String? = nil, faceValueType: String? = nil, rewardedDate: String? = nil, sandbox: String? = nil, rewardSlots: [String]? = nil, rewardId: String? = nil, rewardSupplierId: String? = nil, personRole: String? = nil, programLabel: String? = nil) {
        self.dateEarned = dateEarned
        self.data = data
        self._id = _id
        self.state = state
        self.campaignId = campaignId
        self.partnerRewardId = partnerRewardId
        self.faceValue = faceValue
        self.faceValueType = faceValueType
        self.rewardedDate = rewardedDate
        self.sandbox = sandbox
        self.rewardSlots = rewardSlots
        self.rewardId = rewardId
        self.rewardSupplierId = rewardSupplierId
        self.personRole = personRole
        self.programLabel = programLabel
    }

    public enum CodingKeys: String, CodingKey { 
        case dateEarned
        case data
        case _id = "id"
        case state
        case campaignId
        case partnerRewardId
        case faceValue
        case faceValueType
        case rewardedDate
        case sandbox
        case rewardSlots
        case rewardId
        case rewardSupplierId
        case personRole
        case programLabel
    }

}
